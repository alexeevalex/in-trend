---
import type { HTMLAttributes } from "astro/types";
import IconArrowLarge from "../svgs/icons/IconArrowLarge.astro";
interface Props extends HTMLAttributes<"a"> {
  variant: "light" | "dark";
  title: string;
  isButton?: boolean;
}
const { variant, title, href, isButton, class: className } = Astro.props;

let variantClasses = "";

if (variant === "light") {
  variantClasses = "border-white text-white";
} else if (variant === "dark") {
  variantClasses = "border-black text-black";
} else {
  throw new Error(`Unexpecrted variant ${variant}`);
}
---

{
  isButton ? (
    <button
      class={`inline-flex w-full max-w-xs items-center justify-between gap-4 rounded-full border border-rock-200 py-3 pl-6 pr-3 text-center ${variantClasses} ${className}`}
    >
      <span class="font-avenir text-sm font-semibold uppercase">{title}</span>
      <IconArrowLarge />
    </button>
  ) : (
    <a
      href={`${import.meta.env.BASE_URL}${href}`}
      class={`inline-flex w-full max-w-xs items-center justify-between gap-4 rounded-full border border-rock-200 py-3 pl-6 pr-3 text-center ${variantClasses}`}
    >
      <span class="font-avenir text-sm font-semibold uppercase">{title}</span>
      <IconArrowLarge />
    </a>
  )
}
